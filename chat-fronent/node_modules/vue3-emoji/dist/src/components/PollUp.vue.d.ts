import type { PropType as __PropType } from 'vue';
import { Emoji } from '../types/type';
declare const _sfc_main: import("vue").DefineComponent<{
    size: {
        type: __PropType<string>;
        required: true;
    };
    theme: {
        type: __PropType<"dark" | "default">;
        required: true;
    };
    skin: {
        type: __PropType<"dark" | "middark" | "mid" | "midlight" | "light" | "none">;
        required: true;
    };
    disableGroup: {
        type: __PropType<string[] | undefined>;
        required: false;
    };
    optionsName: {
        type: __PropType<Emoji.JsonData | undefined>;
        required: false;
    };
    unicodeVersion: {
        type: __PropType<number | undefined>;
        required: false;
    };
    needLocal: {
        type: __PropType<boolean | undefined>;
        required: false;
    };
    defaultSelect: {
        type: __PropType<string | undefined>;
        required: false;
    };
    customSize: {
        type: __PropType<Emoji.CustomSize | undefined>;
        required: false;
    };
    customIcon: {
        type: __PropType<Emoji.CustomIcon | undefined>;
        required: false;
    };
    customTheme: {
        type: __PropType<Emoji.CustomTheme | undefined>;
        required: false;
    };
    customTab: {
        type: __PropType<Emoji.JsonData | undefined>;
        required: false;
    };
    fixPos: {
        type: __PropType<Emoji.FixType | undefined>;
        required: false;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "clickEmoji"[], "clickEmoji", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: __PropType<string>;
        required: true;
    };
    theme: {
        type: __PropType<"dark" | "default">;
        required: true;
    };
    skin: {
        type: __PropType<"dark" | "middark" | "mid" | "midlight" | "light" | "none">;
        required: true;
    };
    disableGroup: {
        type: __PropType<string[] | undefined>;
        required: false;
    };
    optionsName: {
        type: __PropType<Emoji.JsonData | undefined>;
        required: false;
    };
    unicodeVersion: {
        type: __PropType<number | undefined>;
        required: false;
    };
    needLocal: {
        type: __PropType<boolean | undefined>;
        required: false;
    };
    defaultSelect: {
        type: __PropType<string | undefined>;
        required: false;
    };
    customSize: {
        type: __PropType<Emoji.CustomSize | undefined>;
        required: false;
    };
    customIcon: {
        type: __PropType<Emoji.CustomIcon | undefined>;
        required: false;
    };
    customTheme: {
        type: __PropType<Emoji.CustomTheme | undefined>;
        required: false;
    };
    customTab: {
        type: __PropType<Emoji.JsonData | undefined>;
        required: false;
    };
    fixPos: {
        type: __PropType<Emoji.FixType | undefined>;
        required: false;
    };
}>> & {
    onClickEmoji?: ((...args: any[]) => any) | undefined;
}, {}>;
export default _sfc_main;
//# sourceMappingURL=PollUp.vue.d.ts.map